{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Allison\\\\Desktop\\\\MyPicksProgram\\\\Program_by_ChatGPT_June_7_2025_Frontend\\\\src\\\\components\\\\ScoredPicksPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScoredPicksPage = () => {\n  _s();\n  const [scores, setScores] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch('/api/scores/all').then(res => {\n      if (!res.ok) throw new Error(`Server error ${res.status}`);\n      return res.json();\n    }).then(data => {\n      if (Array.isArray(data)) {\n        setScores(data);\n      } else {\n        throw new Error('Invalid data format');\n      }\n    }).catch(err => {\n      console.error('Error fetching scores:', err);\n      setError('Unable to load scores. Please check backend.');\n    });\n  }, []);\n  const allWeeks = [...new Set(scores.flatMap(p => Object.keys(p.weekly || {})))].sort((a, b) => parseInt(a) - parseInt(b));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        fontSize: '18px',\n        borderCollapse: 'collapse',\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              textAlign: 'left',\n              paddingRight: '20px'\n            },\n            children: \"Player\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), allWeeks.map(week => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: [\"Wk \", week]\n          }, week, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: scores.map((player, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: player.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), allWeeks.map(week => /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: player.weekly[week] || 0\n          }, week, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              fontWeight: 'bold'\n            },\n            children: player.total\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(ScoredPicksPage, \"6GxitcebVzBwOCCTDxFhiXuiKjA=\");\n_c = ScoredPicksPage;\nexport default ScoredPicksPage;\nvar _c;\n$RefreshReg$(_c, \"ScoredPicksPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ScoredPicksPage","_s","scores","setScores","error","setError","fetch","then","res","ok","Error","status","json","data","Array","isArray","catch","err","console","allWeeks","Set","flatMap","p","Object","keys","weekly","sort","a","b","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","fontSize","borderCollapse","marginTop","textAlign","paddingRight","map","week","player","index","name","fontWeight","total","_c","$RefreshReg$"],"sources":["C:/Users/Allison/Desktop/MyPicksProgram/Program_by_ChatGPT_June_7_2025_Frontend/src/components/ScoredPicksPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ScoredPicksPage = () => {\r\n  const [scores, setScores] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch('/api/scores/all')\r\n      .then(res => {\r\n        if (!res.ok) throw new Error(`Server error ${res.status}`);\r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        if (Array.isArray(data)) {\r\n          setScores(data);\r\n        } else {\r\n          throw new Error('Invalid data format');\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.error('Error fetching scores:', err);\r\n        setError('Unable to load scores. Please check backend.');\r\n      });\r\n  }, []);\r\n\r\n  const allWeeks = [...new Set(scores.flatMap(p => Object.keys(p.weekly || {})))].sort((a, b) => parseInt(a) - parseInt(b));\r\n\r\n  return (\r\n    <div>\r\n      <h1>Leaderboard</h1>\r\n      {error ? (\r\n        <p style={{ color: 'red' }}>{error}</p>\r\n      ) : (\r\n        <table style={{ fontSize: '18px', borderCollapse: 'collapse', marginTop: '20px' }}>\r\n          <thead>\r\n            <tr>\r\n              <th style={{ textAlign: 'left', paddingRight: '20px' }}>Player</th>\r\n              {allWeeks.map(week => (\r\n                <th key={week}>Wk {week}</th>\r\n              ))}\r\n              <th>Total</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {scores.map((player, index) => (\r\n              <tr key={index}>\r\n                <td>{player.name}</td>\r\n                {allWeeks.map(week => (\r\n                  <td key={week} style={{ textAlign: 'center' }}>\r\n                    {player.weekly[week] || 0}\r\n                  </td>\r\n                ))}\r\n                <td style={{ fontWeight: 'bold' }}>{player.total}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScoredPicksPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}