{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Allison\\\\Desktop\\\\MyPicksProgram\\\\Program_by_ChatGPT_June_7_2025_Frontend\\\\src\\\\components\\\\AdminUploadScores.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/components/AdminUploadScores.jsx\n\nimport React, { useState } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminUploadScores() {\n  _s();\n  const [fileName, setFileName] = useState(\"\");\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setFileName(file.name);\n    const reader = new FileReader();\n    reader.onload = async e => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = XLSX.read(data, {\n        type: \"array\"\n      });\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n      const rawData = XLSX.utils.sheet_to_json(worksheet);\n      try {\n        const response = await fetch(\"/api/upload-scores\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            data: rawData\n          })\n        });\n        const result = await response.json();\n        alert(result.message);\n      } catch (err) {\n        console.error(\"Upload error:\", err);\n        alert(\"Upload failed.\");\n      }\n    };\n    reader.readAsArrayBuffer(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Scores Excel File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".xlsx, .xls\",\n      onChange: handleFileUpload,\n      style: {\n        marginBottom: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), fileName && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u2705 Selected File: \", fileName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminUploadScores, \"qmgMVFP5VOwUOxztcZ5P9gagwnE=\");\n_c = AdminUploadScores;\nexport default AdminUploadScores;\nvar _c;\n$RefreshReg$(_c, \"AdminUploadScores\");","map":{"version":3,"names":["React","useState","XLSX","jsxDEV","_jsxDEV","AdminUploadScores","_s","fileName","setFileName","handleFileUpload","event","file","target","files","name","reader","FileReader","onload","e","data","Uint8Array","result","workbook","read","type","sheetName","SheetNames","worksheet","Sheets","rawData","utils","sheet_to_json","response","fetch","method","headers","body","JSON","stringify","json","alert","message","err","console","error","readAsArrayBuffer","style","padding","children","_jsxFileName","lineNumber","columnNumber","accept","onChange","marginBottom","_c","$RefreshReg$"],"sources":["C:/Users/Allison/Desktop/MyPicksProgram/Program_by_ChatGPT_June_7_2025_Frontend/src/components/AdminUploadScores.jsx"],"sourcesContent":["// frontend/src/components/AdminUploadScores.jsx\r\n\r\nimport React, { useState } from \"react\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nfunction AdminUploadScores() {\r\n  const [fileName, setFileName] = useState(\"\");\r\n\r\n  const handleFileUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    setFileName(file.name);\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = async (e) => {\r\n      const data = new Uint8Array(e.target.result);\r\n      const workbook = XLSX.read(data, { type: \"array\" });\r\n\r\n      const sheetName = workbook.SheetNames[0];\r\n      const worksheet = workbook.Sheets[sheetName];\r\n      const rawData = XLSX.utils.sheet_to_json(worksheet);\r\n\r\n      try {\r\n        const response = await fetch(\"/api/upload-scores\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ data: rawData }),\r\n        });\r\n\r\n        const result = await response.json();\r\n        alert(result.message);\r\n      } catch (err) {\r\n        console.error(\"Upload error:\", err);\r\n        alert(\"Upload failed.\");\r\n      }\r\n    };\r\n\r\n    reader.readAsArrayBuffer(file);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h2>Upload Scores Excel File</h2>\r\n      <input\r\n        type=\"file\"\r\n        accept=\".xlsx, .xls\"\r\n        onChange={handleFileUpload}\r\n        style={{ marginBottom: \"10px\" }}\r\n      />\r\n      {fileName && <p>âœ… Selected File: {fileName}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminUploadScores;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,KAAKC,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMQ,gBAAgB,GAAG,MAAOC,KAAK,IAAK;IACxC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAI,CAACF,IAAI,EAAE;IAEXH,WAAW,CAACG,IAAI,CAACG,IAAI,CAAC;IAEtB,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAG,MAAOC,CAAC,IAAK;MAC3B,MAAMC,IAAI,GAAG,IAAIC,UAAU,CAACF,CAAC,CAACN,MAAM,CAACS,MAAM,CAAC;MAC5C,MAAMC,QAAQ,GAAGpB,IAAI,CAACqB,IAAI,CAACJ,IAAI,EAAE;QAAEK,IAAI,EAAE;MAAQ,CAAC,CAAC;MAEnD,MAAMC,SAAS,GAAGH,QAAQ,CAACI,UAAU,CAAC,CAAC,CAAC;MACxC,MAAMC,SAAS,GAAGL,QAAQ,CAACM,MAAM,CAACH,SAAS,CAAC;MAC5C,MAAMI,OAAO,GAAG3B,IAAI,CAAC4B,KAAK,CAACC,aAAa,CAACJ,SAAS,CAAC;MAEnD,IAAI;QACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,oBAAoB,EAAE;UACjDC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEnB,IAAI,EAAEU;UAAQ,CAAC;QACxC,CAAC,CAAC;QAEF,MAAMR,MAAM,GAAG,MAAMW,QAAQ,CAACO,IAAI,CAAC,CAAC;QACpCC,KAAK,CAACnB,MAAM,CAACoB,OAAO,CAAC;MACvB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEF,GAAG,CAAC;QACnCF,KAAK,CAAC,gBAAgB,CAAC;MACzB;IACF,CAAC;IAEDzB,MAAM,CAAC8B,iBAAiB,CAAClC,IAAI,CAAC;EAChC,CAAC;EAED,oBACEP,OAAA;IAAK0C,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9B5C,OAAA;MAAA4C,QAAA,EAAI;IAAwB;MAAAzC,QAAA,EAAA0C,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjC/C,OAAA;MACEoB,IAAI,EAAC,MAAM;MACX4B,MAAM,EAAC,aAAa;MACpBC,QAAQ,EAAE5C,gBAAiB;MAC3BqC,KAAK,EAAE;QAAEQ,YAAY,EAAE;MAAO;IAAE;MAAA/C,QAAA,EAAA0C,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,EACD5C,QAAQ,iBAAIH,OAAA;MAAA4C,QAAA,GAAG,wBAAiB,EAACzC,QAAQ;IAAA;MAAAA,QAAA,EAAA0C,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAA5C,QAAA,EAAA0C,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV;AAAC7C,EAAA,CAhDQD,iBAAiB;AAAAkD,EAAA,GAAjBlD,iBAAiB;AAkD1B,eAAeA,iBAAiB;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}