{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Allison\\\\Desktop\\\\MyPicksProgram\\\\Program_by_ChatGPT_June_7_2025_Frontend\\\\src\\\\components\\\\ChatPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './ChatPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  // ðŸ”„ Detect local vs deployed\n  const backendBase = window.location.hostname === 'localhost' ? 'http://localhost:4000' : 'https://pickem-backend-2025.onrender.com';\n  const fetchMessages = () => {\n    fetch(`${backendBase}/api/chat`).then(res => res.json()).then(data => {\n      setMessages(data.reverse()); // newest at bottom\n    }).catch(err => console.error('Failed to load chat:', err));\n  };\n  useEffect(() => {\n    fetchMessages();\n    const interval = setInterval(fetchMessages, 5000); // auto-refresh every 5 seconds\n    return () => clearInterval(interval);\n  }, []);\n  const sendMessage = () => {\n    if (!name || !message) return;\n    fetch(`${backendBase}/api/chat`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        message\n      })\n    }).then(() => {\n      setMessage('');\n      fetchMessages();\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-messages\",\n        children: \"No messages yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this) : messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.name, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), \" \", msg.message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"chat-input\",\n      type: \"text\",\n      placeholder: \"Enter your game name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"chat-textarea\",\n      placeholder: \"Type your message\",\n      value: message,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chat-button\",\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"unl8KltnJG+G8c01A9usWkCFWVw=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ChatPage","_s","name","setName","message","setMessage","messages","setMessages","backendBase","window","location","hostname","fetchMessages","fetch","then","res","json","data","reverse","catch","err","console","error","interval","setInterval","clearInterval","sendMessage","method","headers","body","JSON","stringify","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Allison/Desktop/MyPicksProgram/Program_by_ChatGPT_June_7_2025_Frontend/src/components/ChatPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './ChatPage.css';\r\n\r\nconst ChatPage = () => {\r\n  const [name, setName] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  // ðŸ”„ Detect local vs deployed\r\n  const backendBase =\r\n    window.location.hostname === 'localhost'\r\n      ? 'http://localhost:4000'\r\n      : 'https://pickem-backend-2025.onrender.com';\r\n\r\n  const fetchMessages = () => {\r\n    fetch(`${backendBase}/api/chat`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setMessages(data.reverse()); // newest at bottom\r\n      })\r\n      .catch(err => console.error('Failed to load chat:', err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n    const interval = setInterval(fetchMessages, 5000); // auto-refresh every 5 seconds\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const sendMessage = () => {\r\n    if (!name || !message) return;\r\n    fetch(`${backendBase}/api/chat`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ name, message }),\r\n    })\r\n      .then(() => {\r\n        setMessage('');\r\n        fetchMessages();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-box\">\r\n        {messages.length === 0 ? (\r\n          <p className=\"no-messages\">No messages yet</p>\r\n        ) : (\r\n          messages.map((msg, index) => (\r\n            <div key={index} className=\"chat-message\">\r\n              <strong>{msg.name}:</strong> {msg.message}\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n      <input\r\n        className=\"chat-input\"\r\n        type=\"text\"\r\n        placeholder=\"Enter your game name\"\r\n        value={name}\r\n        onChange={e => setName(e.target.value)}\r\n      />\r\n      <textarea\r\n        className=\"chat-textarea\"\r\n        placeholder=\"Type your message\"\r\n        value={message}\r\n        onChange={e => setMessage(e.target.value)}\r\n      />\r\n      <button className=\"chat-button\" onClick={sendMessage}>Send</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}