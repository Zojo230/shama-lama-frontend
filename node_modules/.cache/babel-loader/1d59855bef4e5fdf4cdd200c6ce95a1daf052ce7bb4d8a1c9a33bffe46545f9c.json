{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Allison\\\\Desktop\\\\MyPicksProgram\\\\Program_by_ChatGPT_June_7_2025_Frontend\\\\src\\\\components\\\\AdminUploadPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminUploadPage = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [file, setFile] = useState(null);\n  const [message, setMessage] = useState('');\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file || !password) {\n      setMessage('Please enter the password and select a file.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file); // Name must match multer.single('file')\n    formData.append('password', password);\n    try {\n      const response = await axios.post('http://localhost:4000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (response.status === 200) {\n        setMessage('Upload successful!');\n      } else {\n        setMessage('Upload failed. Please try again.');\n      }\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.error === 'Invalid password.') {\n        setMessage('Invalid password.');\n      } else {\n        setMessage('Upload failed. Please try again.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Upload Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      name: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminUploadPage, \"oiogBFw3rJBdxE76SX9MKcsfDzI=\");\n_c = AdminUploadPage;\nexport default AdminUploadPage;\nvar _c;\n$RefreshReg$(_c, \"AdminUploadPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AdminUploadPage","_s","password","setPassword","file","setFile","message","setMessage","handleFileChange","e","target","files","handleUpload","formData","FormData","append","response","post","headers","status","error","data","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","name","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Allison/Desktop/MyPicksProgram/Program_by_ChatGPT_June_7_2025_Frontend/src/components/AdminUploadPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AdminUploadPage = () => {\r\n  const [password, setPassword] = useState('');\r\n  const [file, setFile] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file || !password) {\r\n      setMessage('Please enter the password and select a file.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file); // Name must match multer.single('file')\r\n    formData.append('password', password);\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:4000/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        setMessage('Upload successful!');\r\n      } else {\r\n        setMessage('Upload failed. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      if (error.response && error.response.data && error.response.data.error === 'Invalid password.') {\r\n        setMessage('Invalid password.');\r\n      } else {\r\n        setMessage('Upload failed. Please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Admin Upload Page</h2>\r\n      <div>\r\n        <label>Password:&nbsp;</label>\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n      </div>\r\n      <br />\r\n      <input type=\"file\" name=\"file\" onChange={handleFileChange} />\r\n      <button onClick={handleUpload}>Upload File</button>\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminUploadPage;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}