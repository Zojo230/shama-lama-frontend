{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Allison\\\\Desktop\\\\MyPicksProgram\\\\Program_by_ChatGPT_June_7_2025_Frontend\\\\src\\\\components\\\\PrintableGamesPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrintPage = () => {\n  _s();\n  const {\n    week\n  } = useParams();\n  const [selectedWeek, setSelectedWeek] = useState(parseInt(week) || 1);\n  const [games, setGames] = useState([]);\n  useEffect(() => {\n    fetch(`/api/games/week/${selectedWeek}`).then(res => res.json()).then(data => setGames(data)).catch(err => console.error('Error fetching games:', err));\n  }, [selectedWeek]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Printable Picks Sheet - Week \", selectedWeek]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select Week: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedWeek,\n      onChange: e => setSelectedWeek(parseInt(e.target.value)),\n      children: [1, 2, 3, 4, 5].map(w => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: w,\n        children: [\"Week \", w]\n      }, w, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: games.map((game, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px',\n          fontSize: '18px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: game.team1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), \" vs \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: game.team2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 46\n        }, this), \" \\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontStyle: 'italic'\n          },\n          children: [\"(Spread: \", game.spread, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: '30px'\n      },\n      children: \"Print and circle your picks above.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(PrintPage, \"ohLfp67eB4rZdFSQWGi43zL5MQg=\", false, function () {\n  return [useParams];\n});\n_c = PrintPage;\nexport default PrintPage;\nvar _c;\n$RefreshReg$(_c, \"PrintPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","PrintPage","_s","week","selectedWeek","setSelectedWeek","parseInt","games","setGames","fetch","then","res","json","data","catch","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","w","style","marginTop","game","index","marginBottom","fontSize","team1","team2","fontStyle","spread","_c","$RefreshReg$"],"sources":["C:/Users/Allison/Desktop/MyPicksProgram/Program_by_ChatGPT_June_7_2025_Frontend/src/components/PrintableGamesPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst PrintPage = () => {\r\n  const { week } = useParams();\r\n  const [selectedWeek, setSelectedWeek] = useState(parseInt(week) || 1);\r\n  const [games, setGames] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(`/api/games/week/${selectedWeek}`)\r\n      .then(res => res.json())\r\n      .then(data => setGames(data))\r\n      .catch(err => console.error('Error fetching games:', err));\r\n  }, [selectedWeek]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Printable Picks Sheet - Week {selectedWeek}</h1>\r\n\r\n      <label>Select Week: </label>\r\n      <select value={selectedWeek} onChange={(e) => setSelectedWeek(parseInt(e.target.value))}>\r\n        {[1, 2, 3, 4, 5].map(w => (\r\n          <option key={w} value={w}>Week {w}</option>\r\n        ))}\r\n      </select>\r\n\r\n      <div style={{ marginTop: '20px' }}>\r\n        {games.map((game, index) => (\r\n          <div key={index} style={{ marginBottom: '10px', fontSize: '18px' }}>\r\n            <strong>{game.team1}</strong> vs <strong>{game.team2}</strong> &nbsp;\r\n            <span style={{ fontStyle: 'italic' }}>(Spread: {game.spread})</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <p style={{ marginTop: '30px' }}>Print and circle your picks above.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrintPage;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}