{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Allison\\\\Desktop\\\\MyPicksProgram\\\\Program_by_ChatGPT_June_7_2025_Frontend\\\\src\\\\components\\\\WeeklyScoresPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeeklyScoresPage = () => {\n  _s();\n  const [week, setWeek] = useState(null);\n  const [scores, setScores] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // ✅ Change this if you're deploying live\n  const backendBase = 'http://localhost:4000';\n  useEffect(() => {\n    fetch(`${backendBase}/data/current_week.json`).then(res => res.json()).then(data => {\n      const current = data.currentWeek || 1;\n      setWeek(current);\n    }).catch(() => {\n      setError('Failed to load current week.');\n      setLoading(false);\n    });\n  }, []);\n  useEffect(() => {\n    if (!week) return;\n    setLoading(true);\n    fetch(`${backendBase}/data/scores_week_${week}.json`).then(res => {\n      if (!res.ok) throw new Error('Scores file not found');\n      return res.json();\n    }).then(data => {\n      setScores(data);\n      setLoading(false);\n    }).catch(() => {\n      setScores([]);\n      setError(`No score data available for Week ${week}.`);\n      setLoading(false);\n    });\n  }, [week]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Weekly Scores \\u2013 Week \", week !== null && week !== void 0 ? week : '?']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading scores...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), !loading && scores.length > 0 && scores.map((game, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [game.team1, \" (\", game.score1, \") vs \", game.team2, \" (\", game.score2, \")\"]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)), !loading && scores.length === 0 && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'gray'\n      },\n      children: \"No scores available for this week.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(WeeklyScoresPage, \"bijeCqNWily4kCBGboFfIpuwNr0=\");\n_c = WeeklyScoresPage;\nexport default WeeklyScoresPage;\nvar _c;\n$RefreshReg$(_c, \"WeeklyScoresPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","WeeklyScoresPage","_s","week","setWeek","scores","setScores","loading","setLoading","error","setError","backendBase","fetch","then","res","json","data","current","currentWeek","catch","ok","Error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","game","index","team1","score1","team2","score2","_c","$RefreshReg$"],"sources":["C:/Users/Allison/Desktop/MyPicksProgram/Program_by_ChatGPT_June_7_2025_Frontend/src/components/WeeklyScoresPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst WeeklyScoresPage = () => {\r\n  const [week, setWeek] = useState(null);\r\n  const [scores, setScores] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // ✅ Change this if you're deploying live\r\n  const backendBase = 'http://localhost:4000';\r\n\r\n  useEffect(() => {\r\n    fetch(`${backendBase}/data/current_week.json`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        const current = data.currentWeek || 1;\r\n        setWeek(current);\r\n      })\r\n      .catch(() => {\r\n        setError('Failed to load current week.');\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!week) return;\r\n    setLoading(true);\r\n    fetch(`${backendBase}/data/scores_week_${week}.json`)\r\n      .then(res => {\r\n        if (!res.ok) throw new Error('Scores file not found');\r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        setScores(data);\r\n        setLoading(false);\r\n      })\r\n      .catch(() => {\r\n        setScores([]);\r\n        setError(`No score data available for Week ${week}.`);\r\n        setLoading(false);\r\n      });\r\n  }, [week]);\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      <h2>Weekly Scores – Week {week ?? '?'}</h2>\r\n\r\n      {loading && <p>Loading scores...</p>}\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n      {!loading && scores.length > 0 && scores.map((game, index) => (\r\n        <p key={index}>\r\n          {game.team1} ({game.score1}) vs {game.team2} ({game.score2})\r\n        </p>\r\n      ))}\r\n\r\n      {!loading && scores.length === 0 && !error && (\r\n        <p style={{ color: 'gray' }}>No scores available for this week.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeeklyScoresPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}