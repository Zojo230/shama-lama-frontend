{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Allison\\\\Desktop\\\\MyPicksProgram\\\\Program_by_ChatGPT_June_7_2025_Frontend\\\\src\\\\components\\\\PotPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './PotPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PotPage = () => {\n  _s();\n  const [potData, setPotData] = useState({});\n  const [currentWeek, setCurrentWeek] = useState(1);\n  const [playerCount, setPlayerCount] = useState(0);\n\n  // ‚úÖ Netlify-compatible backend toggle\n  const backendBase = window.location.hostname === 'localhost' ? 'http://localhost:4000' : 'https://pickem-backend-2025.onrender.com';\n  useEffect(() => {\n    fetch(`${backendBase}/data/current_week.json`).then(res => res.json()).then(data => setCurrentWeek(data.currentWeek || 1));\n    fetch(`${backendBase}/data/roster.json`).then(res => res.json()).then(data => setPlayerCount(data.length || 0));\n  }, []);\n  useEffect(() => {\n    const base = playerCount * 10;\n    const potTracker = {};\n    let rolling = 0;\n    const checkWeek = async week => {\n      const file = `${backendBase}/data/winners_week_${week}.json`;\n      try {\n        const res = await fetch(file);\n        if (!res.ok) throw new Error('No file');\n        const data = await res.json();\n        const anyWinner = data.some(entry => entry.total >= 9);\n        if (anyWinner) {\n          rolling = base;\n        } else {\n          rolling += base;\n        }\n        potTracker[week] = rolling;\n      } catch (err) {\n        potTracker[week] = 0;\n      }\n    };\n    const run = async () => {\n      for (let i = 1; i <= 14; i++) {\n        await checkWeek(i);\n      }\n      setPotData(potTracker);\n    };\n    if (playerCount > 0) {\n      run();\n    }\n  }, [playerCount]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83C\\uDFC6 Weekly Pot Totals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), Object.keys(potData).map(week => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pot-box\",\n      children: [\"Week \", week, \": $\", potData[week]]\n    }, week, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(PotPage, \"ryjBYfwa4h5B5l1SoC6+me6hRpA=\");\n_c = PotPage;\nexport default PotPage;\nvar _c;\n$RefreshReg$(_c, \"PotPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","PotPage","_s","potData","setPotData","currentWeek","setCurrentWeek","playerCount","setPlayerCount","backendBase","window","location","hostname","fetch","then","res","json","data","length","base","potTracker","rolling","checkWeek","week","file","ok","Error","anyWinner","some","entry","total","err","run","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","_c","$RefreshReg$"],"sources":["C:/Users/Allison/Desktop/MyPicksProgram/Program_by_ChatGPT_June_7_2025_Frontend/src/components/PotPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './PotPage.css';\r\n\r\nconst PotPage = () => {\r\n  const [potData, setPotData] = useState({});\r\n  const [currentWeek, setCurrentWeek] = useState(1);\r\n  const [playerCount, setPlayerCount] = useState(0);\r\n\r\n  // ‚úÖ Netlify-compatible backend toggle\r\n  const backendBase =\r\n    window.location.hostname === 'localhost'\r\n      ? 'http://localhost:4000'\r\n      : 'https://pickem-backend-2025.onrender.com';\r\n\r\n  useEffect(() => {\r\n    fetch(`${backendBase}/data/current_week.json`)\r\n      .then(res => res.json())\r\n      .then(data => setCurrentWeek(data.currentWeek || 1));\r\n\r\n    fetch(`${backendBase}/data/roster.json`)\r\n      .then(res => res.json())\r\n      .then(data => setPlayerCount(data.length || 0));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const base = playerCount * 10;\r\n    const potTracker = {};\r\n    let rolling = 0;\r\n\r\n    const checkWeek = async (week) => {\r\n      const file = `${backendBase}/data/winners_week_${week}.json`;\r\n      try {\r\n        const res = await fetch(file);\r\n        if (!res.ok) throw new Error('No file');\r\n        const data = await res.json();\r\n        const anyWinner = data.some(entry => entry.total >= 9);\r\n        if (anyWinner) {\r\n          rolling = base;\r\n        } else {\r\n          rolling += base;\r\n        }\r\n        potTracker[week] = rolling;\r\n      } catch (err) {\r\n        potTracker[week] = 0;\r\n      }\r\n    };\r\n\r\n    const run = async () => {\r\n      for (let i = 1; i <= 14; i++) {\r\n        await checkWeek(i);\r\n      }\r\n      setPotData(potTracker);\r\n    };\r\n\r\n    if (playerCount > 0) {\r\n      run();\r\n    }\r\n  }, [playerCount]);\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      <h2>üèÜ Weekly Pot Totals</h2>\r\n      {Object.keys(potData).map(week => (\r\n        <div key={week} className=\"pot-box\">\r\n          Week {week}: ${potData[week]}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PotPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}