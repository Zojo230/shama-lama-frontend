{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Allison\\\\Desktop\\\\MyPicksProgram\\\\Program_by_ChatGPT_June_7_2025_Frontend\\\\src\\\\components\\\\AdminWinnersPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminWinnersPage = () => {\n  _s();\n  const [week, setWeek] = useState(1);\n  const [games, setGames] = useState([]);\n  const [winners, setWinners] = useState({});\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    fetch(`/api/games/${week}`).then(res => res.json()).then(data => {\n      setGames(data);\n      // Reset winners when week changes\n      const initial = {};\n      data.forEach((game, index) => {\n        initial[index] = ''; // No winner selected yet\n      });\n      setWinners(initial);\n    });\n  }, [week]);\n  const handleWinnerSelect = (index, team) => {\n    setWinners(prev => ({\n      ...prev,\n      [index]: team\n    }));\n  };\n  const handleSubmit = () => {\n    const payload = {\n      week,\n      winners: games.map((game, index) => ({\n        gameId: index,\n        winner: winners[index] || ''\n      }))\n    };\n    fetch(`/api/save-winners`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    }).then(res => res.json()).then(data => {\n      setMessage('Winners saved successfully!');\n    }).catch(() => setMessage('Error saving winners.'));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: [\"Admin: Select Winners for Week \", week]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block mb-2\",\n      children: \"Select Week:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: week,\n      onChange: e => setWeek(parseInt(e.target.value)),\n      className: \"border p-1 mb-4\",\n      children: [...Array(16)].map((_, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: i + 1,\n        children: [\"Week \", i + 1]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: games.map((game, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-semibold\",\n          children: [\"Game \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-4\",\n          children: [game.team1, game.team2].map(team => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleWinnerSelect(index, team),\n            className: `p-2 border ${winners[index] === team ? 'bg-green-200 font-bold' : ''}`,\n            children: [team, winners[index] === team && ' ✅ Winner']\n          }, team, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      className: \"mt-6 bg-blue-600 text-white px-4 py-2 rounded\",\n      children: \"Save Winners\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 text-green-700 font-semibold\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminWinnersPage, \"Z3vPiUVorPcyBr7zyeNIxTI4Y9c=\");\n_c = AdminWinnersPage;\nexport default AdminWinnersPage;\nvar _c;\n$RefreshReg$(_c, \"AdminWinnersPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AdminWinnersPage","_s","week","setWeek","games","setGames","winners","setWinners","message","setMessage","fetch","then","res","json","data","initial","forEach","game","index","handleWinnerSelect","team","prev","handleSubmit","payload","map","gameId","winner","method","headers","body","JSON","stringify","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","parseInt","target","Array","_","i","team1","team2","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Allison/Desktop/MyPicksProgram/Program_by_ChatGPT_June_7_2025_Frontend/src/components/AdminWinnersPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst AdminWinnersPage = () => {\r\n  const [week, setWeek] = useState(1);\r\n  const [games, setGames] = useState([]);\r\n  const [winners, setWinners] = useState({});\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetch(`/api/games/${week}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setGames(data);\r\n        // Reset winners when week changes\r\n        const initial = {};\r\n        data.forEach((game, index) => {\r\n          initial[index] = ''; // No winner selected yet\r\n        });\r\n        setWinners(initial);\r\n      });\r\n  }, [week]);\r\n\r\n  const handleWinnerSelect = (index, team) => {\r\n    setWinners(prev => ({ ...prev, [index]: team }));\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const payload = {\r\n      week,\r\n      winners: games.map((game, index) => ({\r\n        gameId: index,\r\n        winner: winners[index] || ''\r\n      }))\r\n    };\r\n\r\n    fetch(`/api/save-winners`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(payload)\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setMessage('Winners saved successfully!');\r\n      })\r\n      .catch(() => setMessage('Error saving winners.'));\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h2 className=\"text-xl font-bold mb-4\">Admin: Select Winners for Week {week}</h2>\r\n\r\n      <label className=\"block mb-2\">Select Week:</label>\r\n      <select\r\n        value={week}\r\n        onChange={e => setWeek(parseInt(e.target.value))}\r\n        className=\"border p-1 mb-4\"\r\n      >\r\n        {[...Array(16)].map((_, i) => (\r\n          <option key={i} value={i + 1}>Week {i + 1}</option>\r\n        ))}\r\n      </select>\r\n\r\n      <div className=\"space-y-4\">\r\n        {games.map((game, index) => (\r\n          <div key={index} className=\"border p-2\">\r\n            <div className=\"font-semibold\">Game {index + 1}</div>\r\n            <div className=\"flex space-x-4\">\r\n              {[game.team1, game.team2].map(team => (\r\n                <button\r\n                  key={team}\r\n                  onClick={() => handleWinnerSelect(index, team)}\r\n                  className={`p-2 border ${\r\n                    winners[index] === team ? 'bg-green-200 font-bold' : ''\r\n                  }`}\r\n                >\r\n                  {team}\r\n                  {winners[index] === team && ' ✅ Winner'}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <button\r\n        onClick={handleSubmit}\r\n        className=\"mt-6 bg-blue-600 text-white px-4 py-2 rounded\"\r\n      >\r\n        Save Winners\r\n      </button>\r\n\r\n      {message && <div className=\"mt-4 text-green-700 font-semibold\">{message}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminWinnersPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}